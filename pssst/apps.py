#!/usr/bin/env python

import pandas as pd
import numpy as np

sourcefolder = "/home/jus/notebook/jus/erx/source"

terms_old = pd.read_csv("{}/EnrollmentrxRx__Term__c.csv".format(sourcefolder), parse_dates=True, encoding='latin-1')
terms_old = terms_old[['Id', 'Name']].rename(index=str, columns={"Name": "Term"})
terms_new = pd.read_csv("{}/hed__Term__c.csv".format(sourcefolder), parse_dates=True, encoding='latin-1')
terms_new = terms_new[['Id', 'Name']].rename(index=str, columns={"Name": "Term"})

df = pd.read_csv("{}/EnrollmentrxRx__Enrollment_Opportunity__c.csv".format(sourcefolder), parse_dates=True, encoding='latin-1', low_memory=False)

hundred = [
        'ACT_Taken_Planned__c',
	'AC_will_call__c',
	'ADC_Trasnsfer_Admit_Decision__c',
	'AP_Classes__c',
	'AQ_Candidacy_ID__c',
	'AQ_Location_Campus__c',
	'AQ_Program_Id__c',
	'About_Me__c',
	'Academic_History_Section_HS__c',
	'Academic_History_Section_PS__c',
	'Activities__c',
	'Additional_Information__c',
	'AdmLetter_Conditional_Paragraph__c',
	'Admit_City__c',
	'Admit_Country__c',
	'Admit_Province_State__c',
	'Admit_Street_Line_1__c',
	'Admit_Street_Line_2__c',
	'Admit_Street_Line_3__c',
	'Admit_Zip_Postal_Code__c',
	'Applicant_Type__c',
	'Apply_for_Financial_Aid__c',
	'Area_of_Study__c',
	'Attended_College_University__c',
	'BC_Personal_Education_No__c',
	'Basis_of_Admission__c',
	'Candidate_Decision__c',
	'Career_Industry_Current__c',
	'Career_Industry_Predominant__c',
	'Cnsl_Comments__c',
	'Cnsl_Court_Noncompliance__c',
	'Cnsl_Criminal_Conviction__c',
	'Cnsl_Curr_Defendant_Civil__c',
	'Cnsl_Current_Prof_Proceeding__c',
	'Cnsl_Disciplinary_Action__c',
	'Cnsl_Drug_Alcohol_Addiction__c',
	'Cnsl_Impairments_Limitations__c',
	'Cnsl_Licensing_Issues__c',
	'Cnsl_Malpractice__c',
	'Cnsl_Material_Concern__c',
	'Cnsl_Pending_Charges__c',
	'Cnsl_Phys_Ment_Emot_Condtn__c',
	'Cnsl_Prof_Regulatory_Action__c',
	'Cnsl_Suitability_Competence__c',
	'Cnsl_Voluntary_License_Relinquish__c',
	'Colleges_Attended__c',
	'Comm_Covenant_Questions__c',
	'Community_Covenant__c',
	'Condition_of_Admission__c',
	'Counselling_Psychology_Section__c',
	'Counsellor_Rating__c',
	'CreatedById',
	'CreatedDate',
	'Criminal_Conviction__c',
	'Current_Counsellor__c',
	'Current_Region__c',
	'Date_Admit_Letter_Produced__c',
	'Date_Admit__c',
	'Date_App_Complete__c',
	'Date_App_Started__c',
	'Date_App_Submitted__c',
	'Date_Deposit__c',
	'Date_Enrolled__c',
	'Date_File_Closed__c',
	'Date_Inquiry__c',
	'Date_Paid__c',
	'Date_Pre_Enrolled__c',
	'Demographic_Info_Section__c',
	'Educ_Career_Goals__c',
	'Employment_Section__c',
	'Enrollment_Information_Section__c',
	'EnrollmentrxRx__ACT_Date_Test_Taken__c',
	'EnrollmentrxRx__Admissions_Status_Text__c',
	'EnrollmentrxRx__Admissions_Status__c',
	'EnrollmentrxRx__Applicant__c',
	'EnrollmentrxRx__Application_Fee_Payment__c',
	'EnrollmentrxRx__Application_Type__c',
	'EnrollmentrxRx__Apply_For_Merit_Based_Scholarship__c',
	'EnrollmentrxRx__Closed_File_Disposition__c',
	'EnrollmentrxRx__Division_of_Military__c',
	'EnrollmentrxRx__Do_You_Plan_to_Apply_For_Financial_Aid__c',
	'EnrollmentrxRx__Documents_Created__c',
	'EnrollmentrxRx__Documents_Required_Missing_List__c',
	'EnrollmentrxRx__Financial_Aid_Stage__c',
	'EnrollmentrxRx__GPA__c',
	'EnrollmentrxRx__Highest_Level_of_Education__c',
	'EnrollmentrxRx__How_Did_You_Hear_About_Us__c',
	'EnrollmentrxRx__Intend_to_Earn_a_Degree__c',
	'EnrollmentrxRx__Intend_to_be_a_Full_Time_Student__c',
	'EnrollmentrxRx__Intend_to_live_in_College_Housing__c',
	'EnrollmentrxRx__Military_Status__c',
	'EnrollmentrxRx__Program_of_Interest__c',
	'EnrollmentrxRx__Status_Modified_Date__c',
	'EnrollmentrxRx__Term_Intended_to_Start__c',
	'Entrance_Term__c',
	'Entrance_Type__c',
	'Extracurricular__c',
	'Family_Info_Section__c',
	'File_Forwarded_Deferred_Application__c',
	'Financial_Aid_GPA__c',
	'Financial_Aid_Section__c',
	'GMAT_Date__c',
	'GMAT_Score__c',
	'GMAT_Taken__c',
	'Homeschool_Blended_Distributed__c',
	'IB_Classes__c',
	'IB_Diploma__c',
	'Id',
	'Import_Date__c',
	'Information_Sharing_Statement_Version__c',
	'Information_Sharing_Statement__c',
	'IsDeleted',
	'Is_Independent__c',
	'LastActivityDate',
	'LastModifiedById',
	'LastModifiedDate',
	'Legal_Confirmation_Version__c',
	'Legal_Confirmation__c',
	'Location_Campus__c',
	'MACleanCity__c',
	'MACleanCountry__c',
	'MACleanCounty__c',
	'MACleanDistrict__c',
	'MACleanPostalCode__c',
	'MACleanState__c',
	'MACleanStreet__c',
	'MALatitude__c',
	'MALongitude__c',
	'MAQuality__c',
	'MASimilarity__c',
	'MASkipGeocoding__c',
	'MAVerifiedLatitude__c',
	'MAVerifiedLongitude__c',
	'Manual_Entrance_Type_Override__c',
	'Manual_Ownership_Override__c',
	'Manual_Region_Override__c',
	'Manual_Transfer_Override__c',
	'Max_Coures_Taken_Elsewhere__c',
	'Name',
	'Need_Application_Status__c',
	'Number_of_courses_taken_elsewhere__c',
	'Nursing_Career_Goals__c',
	'Nursing_Career_Reasons__c',
	'Nursing_Communication_Skills__c',
	'Nursing_Crim_Impairment_Expl__c',
	'Nursing_Impairments__c',
	'Nursing_Other_Questions__c',
	'Nursing_Previous_App_Date__c',
	'Nursing_Previous_App__c',
	'Nursing_Registration_Number__c',
	'Nursing_Rigor_Challenge__c',
	'Nursing_Section__c',
	'Nursing_Self_Motivation__c',
	'Nursing_Volunteer_Exp__c',
	'Nursing_What_it_offers__c',
	'Nursing_What_you_offer__c',
	'Nursing_Why_TWU__c',
	'Other_Section__c',
	'OwnerId',
	'Parent_App_Status__c',
	'Parent_s_Employed_at_TWU__c',
	'Parents_are_alumni__c',
	'Payment_Received_on__c',
	'Personal_Data_Section__c',
	'Previous_TWU_Attendance__c',
	'Program_Offered__c',
	'Program_Questions_Section__c',
	'Program_of_Interest_Secondary__c',
	'Provisional_Conditional_Paragraph__c',
	'Quadrant_Rating__c',
	'Questions__c',
	'Reason_for_Disposition__c',
	'Reassign_Region__c',
	'Recommendation_Section__c',
	'Regenerate_Requirement_Type__c',
	'Region_Override__c',
	'Region__c',
	'Registered__c',
	'SAT_Taken_Planned__c',
	'School_Decision__c',
	'School_Program_Catalog__c',
	'Seminary__c',
	'Sent_for_Approval__c',
	'Significant_Life_Experience__c',
	'Stream__c',
	'Submit_Application_Section__c',
	'SystemModstamp',
	'Teaching_Experiences__c',
	'Test_Scores_Section__c',
	'Treat_as_transfer_student__c',
	'Why_Applying__c',
	'of_Other_Colleges_Attended__c',
	'zeemee_URL__c'
]

hundred.append('Term_HEDA__c')

df = df[hundred]

ignored = [
    'ACT_Taken_Planned__c',
    'ADC_Trasnsfer_Admit_Decision__c',
    'AP_Classes__c',
    'AQ_Candidacy_ID__c',
    'BC_Personal_Education_No__c',
    'Candidate_Decision__c',
    'Career_Industry_Current__c',
    'Career_Industry_Predominant__c',
    'Cnsl_Comments__c',
    'Cnsl_Court_Noncompliance__c',
    'Cnsl_Criminal_Conviction__c',
    'Cnsl_Curr_Defendant_Civil__c',
    'Cnsl_Current_Prof_Proceeding__c',
    'Cnsl_Disciplinary_Action__c',
    'Cnsl_Drug_Alcohol_Addiction__c',
    'Cnsl_Impairments_Limitations__c',
    'Cnsl_Licensing_Issues__c',
    'Cnsl_Malpractice__c',
    'Cnsl_Material_Concern__c',
    'Cnsl_Pending_Charges__c',
    'Cnsl_Phys_Ment_Emot_Condtn__c',
    'Cnsl_Prof_Regulatory_Action__c',
    'Cnsl_Suitability_Competence__c',
    'Cnsl_Voluntary_License_Relinquish__c',
    'Comm_Covenant_Questions__c',
    'Criminal_Conviction__c',
    'Enrollment_Information_Section__c',
    'EnrollmentrxRx__ACT_Date_Test_Taken__c',
    'EnrollmentrxRx__Admissions_Status_Text__c',
    'EnrollmentrxRx__Application_Fee_Payment__c',
    'EnrollmentrxRx__Apply_For_Merit_Based_Scholarship__c',
    'EnrollmentrxRx__Division_of_Military__c',
    'EnrollmentrxRx__Do_You_Plan_to_Apply_For_Financial_Aid__c',
    'EnrollmentrxRx__Documents_Created__c',
    'EnrollmentrxRx__Documents_Required_Missing_List__c',
    'EnrollmentrxRx__Financial_Aid_Stage__c',
    'EnrollmentrxRx__Highest_Level_of_Education__c',
    'EnrollmentrxRx__How_Did_You_Hear_About_Us__c',
    'EnrollmentrxRx__Intend_to_Earn_a_Degree__c',
    'EnrollmentrxRx__Intend_to_be_a_Full_Time_Student__c',
    'EnrollmentrxRx__Intend_to_live_in_College_Housing__c',
    'EnrollmentrxRx__Military_Status__c',
    'EnrollmentrxRx__Program_of_Interest__c',
    'EnrollmentrxRx__Status_Modified_Date__c',
    'EnrollmentrxRx__Term_Intended_to_Start__c',
    'Family_Info_Section__c',
    'GMAT_Date__c',
    'GMAT_Score__c',
    'GMAT_Taken__c',
    'IB_Classes__c',
    'IB_Diploma__c',
    'Information_Sharing_Statement__c',
    'Information_Sharing_Statement_Version__c',
    'IsDeleted',
    'Legal_Confirmation_Version__c',
    'MACleanCity__c',
    'MACleanCountry__c',
    'MACleanCounty__c',
    'MACleanDistrict__c',
    'MACleanPostalCode__c',
    'MACleanState__c',
    'MACleanStreet__c',
    'MAQuality__c',
    'MASimilarity__c',
    'MASkipGeocoding__c',
    'MAVerifiedLatitude__c',
    'MAVerifiedLongitude__c',
    'Manual_Entrance_Type_Override__c',
    'Manual_Region_Override__c',
    'Max_Coures_Taken_Elsewhere__c',
    'Provisional_Conditional_Paragraph__c',
    'Reassign_Region__c',
    'Regenerate_Requirement_Type__c',
    'Region_Override__c',
    'SAT_Taken_Planned__c',
    'Test_Scores_Section__c',
    'of_Other_Colleges_Attended__c',
    'zeemee_URL__c'
]
essays = {
    'aboutme.csv': ['About_Me__c'],
    'education.csv': ['Educ_Career_Goals__c', 'Teaching_Experiences__c'],
    'nursing.csv': ['Nursing_Career_Goals__c', 'Nursing_Career_Reasons__c', 'Nursing_Communication_Skills__c', 'Nursing_Crim_Impairment_Expl__c', 'Nursing_Impairments__c', 'Nursing_Other_Questions__c', 'Nursing_Previous_App_Date__c', 'Nursing_Previous_App__c', 'Nursing_Registration_Number__c', 'Nursing_Rigor_Challenge__c', 'Nursing_Section__c', 'Nursing_Self_Motivation__c', 'Nursing_Volunteer_Exp__c', 'Nursing_What_it_offers__c', 'Nursing_What_you_offer__c', 'Nursing_Why_TWU__c'],
    'lifeexp.csv': ['Significant_Life_Experience__c'],
    'extracurr.csv': ['Extracurricular__c'],
    'questions.csv': ['Questions__c'],
    'whyapply.csv': ['Why_Applying__c'],
    'activities.csv': ['Activities__c']
}
contactfields = [
    'Admit_City__c',
    'Admit_Country__c',
    'Admit_Province_State__c',
    'Admit_Street_Line_1__c',
    'Admit_Street_Line_2__c',
    'Admit_Street_Line_3__c',
    'Admit_Zip_Postal_Code__c',
]
owners = [
    'CreatedById',
    'EnrollmentrxRx__Applicant__c',
    'LastModifiedById',
    'OwnerId',
    'Region__c',
]
dates = [
    'CreatedDate',
    'LastActivityDate',
    'LastModifiedDate',
    'Name',
    'SystemModstamp'
]

essayfields = [item for sublist in essays.values() for item in sublist]

df1 = df.drop(columns=ignored+essayfields+contactfields+owners+dates)

df2 = df1.join(terms_old.set_index('Id'), on='Entrance_Term__c')
df2 = df2.join(terms_new.set_index('Id'), on='Term_HEDA__c', lsuffix='_old', rsuffix='_new')
df2 = df2.loc[df2['Term_new'].notnull()]

df2['Term_semester'] = df2['Term_new'].apply(lambda x: x.split()[0])
df2['Term_year'] = df2['Term_new'].apply(lambda x: x.split()[1])

y = df2.loc[df2['Term_new'].str.contains('201[4-8]')].drop(columns=['Entrance_Term__c', 'Id', 'Location_Campus__c', 'Term_HEDA__c', 'Term_old', 'Term_new'])

# Int types.
for c in ['AQ_Program_Id__c', 'AdmLetter_Conditional_Paragraph__c', 'Number_of_courses_taken_elsewhere__c']:
    y[c] = y[c].fillna(-1).astype(int)

# YesNo types.
for c in ['Apply_for_Financial_Aid__c', 'Attended_College_University__c', 'Community_Covenant__c', 'Homeschool_Blended_Distributed__c']:
    y[c] = np.where(y[c] == 'Yes', 1, 0)

for c in y.columns:
    print('-'*80)
    print(y[c].value_counts())

y.to_csv("y.csv", index=False)
